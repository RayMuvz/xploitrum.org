name: Deploy to Production

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    
    steps:
    - name: üöÄ Deploy to Server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DROPLET_IP }}
        username: xploitrum
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          set -e  # Exit on error
          echo "üöÄ Starting safe deployment..."
          
          # Backup database (safety measure)
          echo "üì¶ Creating database backup..."
          mkdir -p ~/backups/pre-deployment-$(date +%Y%m%d_%H%M%S)
          BACKUP_DIR=~/backups/pre-deployment-$(date +%Y%m%d_%H%M%S)
          
          # Backup PostgreSQL database
          pg_dump -U xploitrum xploitrum > $BACKUP_DIR/database_backup.sql || echo "‚ö†Ô∏è Could not backup database"
          
          # Backup environment files
          cp ~/xploitrum.org/backend/.env $BACKUP_DIR/.env || echo "‚ö†Ô∏è Could not backup .env"
          
          echo "‚úÖ Backups created in $BACKUP_DIR"
          
          # Navigate to project
          cd ~/xploitrum.org
          
          # Pull latest changes
          echo "üì• Pulling from GitHub..."
          git fetch origin
          git pull origin main || git pull origin master
          
          # Get commit info
          COMMIT=$(git rev-parse --short HEAD)
          echo "üì¶ Deployed commit: $COMMIT"
          
          # Update backend
          echo "üîß Updating backend..."
          cd backend
          source venv/bin/activate
          pip install -r requirements.txt --quiet --upgrade
          
          # NO DATABASE MIGRATIONS - Code is compatible with existing schema
          echo "‚ÑπÔ∏è Skipping database migrations (code is backward compatible)"
          
          # Restart backend
          sudo systemctl restart xploitrum-backend
          echo "‚è≥ Waiting for backend to start..."
          sleep 3
          
          # Update frontend
          echo "üé® Updating frontend..."
          cd ../frontend
          npm install --silent
          npm run build
          
          # Restart frontend
          sudo systemctl restart xploitrum-frontend
          echo "‚è≥ Waiting for frontend to start..."
          sleep 3
          
          # Reload Nginx
          sudo systemctl reload nginx
          
          # Check status
          echo "‚úÖ Deployment complete!"
          echo "Backend: $(sudo systemctl is-active xploitrum-backend)"
          echo "Frontend: $(sudo systemctl is-active xploitrum-frontend)"
          echo "Nginx: $(sudo systemctl is-active nginx)"
          echo "PostgreSQL: $(sudo systemctl is-active postgresql)"
          
    - name: ‚úÖ Deployment Status
      if: success()
      run: echo "üéâ Successfully deployed to production!"
      
    - name: ‚ùå Deployment Failed
      if: failure()
      run: echo "‚ùå Deployment failed. Check logs on server."

