version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: xploitrum-postgres-dev
    environment:
      - POSTGRES_DB=xploitrum
      - POSTGRES_USER=xploitrum
      - POSTGRES_PASSWORD=${DB_PASSWORD:-xploitrum123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: xploitrum-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend
    restart: unless-stopped

  # Backend - FastAPI (for development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: xploitrum-backend-dev
    environment:
      - DATABASE_URL=postgresql://xploitrum:${DB_PASSWORD:-xploitrum123}@postgres:5432/xploitrum
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DEBUG=true
      - LOG_LEVEL=DEBUG
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - postgres
      - redis
    networks:
      - backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  # Frontend - Next.js (for development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: xploitrum-frontend-dev
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - frontend
      - backend
    command: npm run dev
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:


networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
